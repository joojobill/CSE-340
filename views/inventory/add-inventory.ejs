<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head') %>
  <title><%= title %> | CSE Motors</title>
  <style>
    .form-container {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 2rem;
      background-color: #f8f9fa;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    .form-title {
      color: #2c3e50;
      margin-bottom: 1.5rem;
      text-align: center;
    }
    .section-title {
      color: #2c3e50;
      margin-bottom: 1rem;
      padding-bottom: 0.5rem;
      border-bottom: 1px solid #dee2e6;
    }
    .form-group {
      margin-bottom: 1.5rem;
    }
    .btn-container {
      display: flex;
      justify-content: space-between;
      margin-top: 2rem;
    }
    .is-invalid {
      border-color: #dc3545;
    }
    .is-valid {
      border-color: #28a745;
    }
    .invalid-feedback {
      display: block;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #dc3545;
    }
    .valid-feedback {
      display: block;
      width: 100%;
      margin-top: 0.25rem;
      font-size: 0.875em;
      color: #28a745;
    }
    .input-group-text {
      min-width: 100px;
    }
    .form-text {
      font-size: 0.875rem;
      color: #6c757d;
    }
  </style>
</head>
<body>
 

  <main class="container">
    <div class="form-container">
      <h1 class="form-title"><%= title %></h1>
      
      <% if (messages.error) { %>
        <div class="alert alert-danger">
          <%= messages.error %>
        </div>
      <% } %>

      <form id="inventoryForm" action="/inv/add-inventory" method="post" class="needs-validation" novalidate>
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        
        <div class="row">
          <!-- Vehicle Details Column -->
          <div class="col-md-6">
            <h3 class="section-title">Vehicle Details</h3>
            
            <div class="form-group">
              <label for="inv_make" class="form-label">Make *</label>
              <input 
                type="text" 
                name="inv_make" 
                id="inv_make" 
                class="form-control <%= errors?.find(e => e.param === 'inv_make') ? 'is-invalid' : '' %>"
                value="<%= formData.inv_make %>"
                required
                minlength="2"
                maxlength="30"
                pattern="[a-zA-Z0-9 ]+"
              >
              <div id="inv_makeError" class="invalid-feedback">
                <% const makeError = errors?.find(e => e.param === 'inv_make') %>
                <%= makeError?.msg || 'Make is required (2-30 characters, letters and numbers only)' %>
              </div>
              <div id="inv_makeValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. 2-30 characters. Letters and numbers only.
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_model" class="form-label">Model *</label>
              <input 
                type="text" 
                name="inv_model" 
                id="inv_model" 
                class="form-control <%= errors?.find(e => e.param === 'inv_model') ? 'is-invalid' : '' %>"
                value="<%= formData.inv_model %>"
                required
                minlength="2"
                maxlength="30"
                pattern="[a-zA-Z0-9 ]+"
              >
              <div id="inv_modelError" class="invalid-feedback">
                <% const modelError = errors?.find(e => e.param === 'inv_model') %>
                <%= modelError?.msg || 'Model is required (2-30 characters, letters and numbers only)' %>
              </div>
              <div id="inv_modelValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. 2-30 characters. Letters and numbers only.
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_year" class="form-label">Year *</label>
              <input 
                type="number" 
                name="inv_year" 
                id="inv_year" 
                class="form-control <%= errors?.find(e => e.param === 'inv_year') ? 'is-invalid' : '' %>"
                value="<%= formData.inv_year %>"
                min="1900"
                max="<%= new Date().getFullYear() + 1 %>"
                required
              >
              <div id="inv_yearError" class="invalid-feedback">
                <% const yearError = errors?.find(e => e.param === 'inv_year') %>
                <%= yearError?.msg || `Year must be between 1900 and ${new Date().getFullYear() + 1}` %>
              </div>
              <div id="inv_yearValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. 4-digit year between 1900 and <%= new Date().getFullYear() + 1 %>.
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_description" class="form-label">Description *</label>
              <textarea 
                name="inv_description" 
                id="inv_description" 
                class="form-control <%= errors?.find(e => e.param === 'inv_description') ? 'is-invalid' : '' %>"
                rows="4"
                required
                minlength="10"
              ><%= formData.inv_description %></textarea>
              <div id="inv_descriptionError" class="invalid-feedback">
                <% const descError = errors?.find(e => e.param === 'inv_description') %>
                <%= descError?.msg || 'Description must be at least 10 characters' %>
              </div>
              <div id="inv_descriptionValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. Minimum 10 characters.
              </div>
            </div>
          </div>
          
          <!-- Pricing & Classification Column -->
          <div class="col-md-6">
            <h3 class="section-title">Pricing & Classification</h3>
            
            <div class="form-group">
              <label for="inv_price" class="form-label">Price *</label>
              <div class="input-group">
                <span class="input-group-text">$</span>
                <input 
                  type="number" 
                  name="inv_price" 
                  id="inv_price" 
                  class="form-control <%= errors?.find(e => e.param === 'inv_price') ? 'is-invalid' : '' %>"
                  value="<%= formData.inv_price %>"
                  step="0.01"
                  min="0"
                  required
                >
              </div>
              <div id="inv_priceError" class="invalid-feedback">
                <% const priceError = errors?.find(e => e.param === 'inv_price') %>
                <%= priceError?.msg || 'Price must be greater than 0' %>
              </div>
              <div id="inv_priceValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. Must be greater than 0.
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_miles" class="form-label">Mileage *</label>
              <div class="input-group">
                <span class="input-group-text">mi</span>
                <input 
                  type="number" 
                  name="inv_miles" 
                  id="inv_miles" 
                  class="form-control <%= errors?.find(e => e.param === 'inv_miles') ? 'is-invalid' : '' %>"
                  value="<%= formData.inv_miles %>"
                  min="0"
                  required
                  oninput="this.value = this.value.replace(/[^0-9]/g, '')"
                >
              </div>
              <div id="inv_milesError" class="invalid-feedback">
                <% const milesError = errors?.find(e => e.param === 'inv_miles') %>
                <%= milesError?.msg || 'Miles must be greater than 0 (digits only)' %>
              </div>
              <div id="inv_milesValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. Must be greater than 0. Digits only (no commas).
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_color" class="form-label">Color *</label>
              <input 
                type="text" 
                name="inv_color" 
                id="inv_color" 
                class="form-control <%= errors?.find(e => e.param === 'inv_color') ? 'is-invalid' : '' %>"
                value="<%= formData.inv_color %>"
                required
              >
              <div id="inv_colorError" class="invalid-feedback">
                <% const colorError = errors?.find(e => e.param === 'inv_color') %>
                <%= colorError?.msg || 'Color is required' %>
              </div>
              <div id="inv_colorValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required.
              </div>
            </div>
            
            <div class="form-group">
              <label for="classificationList" class="form-label">Classification *</label>
              <%- classificationList %>
              <div id="classification_idError" class="invalid-feedback">
                <% const classError = errors?.find(e => e.param === 'classification_id') %>
                <%= classError?.msg || 'Valid classification is required' %>
              </div>
              <div id="classification_idValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. Choose from the list.
              </div>
            </div>
            
            <div class="form-group">
              <label for="inv_image" class="form-label">Image Path *</label>
              <input 
                type="text" 
                name="inv_image" 
                id="inv_image" 
                class="form-control <%= errors?.find(e => e.param === 'inv_image') ? 'is-invalid' : '' %>"
                value="<%= formData.inv_image || '/images/vehicles/no-image.jpg' %>"
                required
              >
              <div id="inv_imageError" class="invalid-feedback">
                <% const imageError = errors?.find(e => e.param === 'inv_image') %>
                <%= imageError?.msg || 'Valid image URL is required' %>
              </div>
              <div id="inv_imageValid" class="valid-feedback">
                Looks good!
              </div>
              <div class="form-text">
                Required. Default: /images/vehicles/no-image.jpg
              </div>
            </div>
            
            <div class="form-group">
              <label for="